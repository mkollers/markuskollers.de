version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10-browsers
    working_directory: ~/project
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run: 
          name: Install dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"
      - run:
          name: Build server and client bundles
          command: npm run build:ssr
      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run tests
          command: npm test
      - store_test_results:
          path: ~/project/test-results
      - run:
          name: Code Climate Test Coverage
          command: |
            ./cc-test-reporter format-coverage -t lcov -o "./coverage/markuskollers-de/lcov.info"
      # Cache the dist folder for the deploy job- 
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - "package.json"
            - ".gcloudignore"
            - "app.yaml"
            - "dist"
  deploy:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/project
    steps:
      - restore_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run: |
          echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Deploy to GCP
          command: gcloud app deploy /home/circleci/project/app.yaml --project markuskollers-de --quiet
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
